/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/src/board/board-item.js":
/*!************************************!*\
  !*** ./js/src/board/board-item.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoardItem)\n/* harmony export */ });\n/* harmony import */ var _key_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./key.js */ \"./js/src/board/key.js\");\n/* harmony import */ var _screen_screen_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../screen/screen.js */ \"./js/src/screen/screen.js\");\n/* harmony import */ var _key_language_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./key-language.js */ \"./js/src/board/key-language.js\");\n\r\n\r\n\r\n\r\nclass BoardItem {\r\n  #KEY_CODE = \"CODE\";//Ключ кодов клавиш в объекте языков\r\n\r\n  #boardItem = undefined;//Объект панели с кнопками и лого\r\n  #keyPanel = undefined;//Объект панели кнопок\r\n  #keys = new Array();//Массив с объектами кнопок\r\n  #countKeyInLine = new Array(14, 14, 13, 12, 9);//Количество кнопок в ряду\r\n  #language = new Map([\r\n    [this.#KEY_CODE,\r\n    [192, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 187, 8, 9, 81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 219, 221, 220, 20, 65, 83, 68, 70, 71, 72, 74, 75, 76, 186, 222, 13, 16, 90, 88, 67, 86, 66, 78, 77, 188, 190, 191, 16, 17, 18, 32, 18, 17, 37, 38, 40, 39]\r\n    ],\r\n    [\"RU\",\r\n      [[\"ё\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"-\", \"=\", \"&#8592;\", \"&#8596;\", \"й\", \"ц\", \"у\", \"к\", \"е\", \"н\", \"г\", \"ш\", \"щ\", \"з\", \"х\", \"ъ\", \"\\\\\", \"CapsLock\", \"ф\", \"ы\", \"в\", \"а\", \"п\", \"р\", \"о\", \"л\", \"д\", \"ж\", \"э\", \"Enter\", \"&#8657;\", \"я\", \"ч\", \"с\", \"м\", \"и\", \"т\", \"ь\", \"б\", \"ю\", \".\", \"&#8657;\", \"Ctrl\", \"Alt\", \" \", \"Alt\", \"Ctrl\", \"&#8592;\", \"&#8593;\", \"&#8595;\", \"&#8594;\"],\r\n      [\"Ё\", \"!\", \"\\\"\", \"№\", \";\", \"%\", \":\", \"?\", \"*\", \"(\", \")\", \"_\", \"+\", \"&#8592;\", \"&#8596;\", \"Й\", \"Ц\", \"У\", \"К\", \"Е\", \"Н\", \"Г\", \"Ш\", \"Щ\", \"З\", \"Х\", \"Ъ\", \"/\", \"CapsLock\", \"Ф\", \"Ы\", \"В\", \"А\", \"П\", \"Р\", \"О\", \"Л\", \"Д\", \"Ж\", \"Э\", \"Enter\", \"&#8657;\", \"Я\", \"Ч\", \"С\", \"М\", \"И\", \"Т\", \"Ь\", \"Б\", \"Ю\", \",\", \"&#8657;\", \"Ctrl\", \"Alt\", \" \", \"Alt\", \"Ctrl\", \"&#8592;\", \"&#8593;\", \"&#8595;\", \"&#8594;\"]]\r\n    ],\r\n    [\"EN\",\r\n      [[\"`\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"-\", \"=\", \"&#8592;\", \"&#8596;\", \"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"[\", \"]\", \"\\\\\", \"CapsLock\", \"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", \"Enter\", \"&#8657;\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\", \"&#8657;\", \"Ctrl\", \"Alt\", \" \", \"Alt\", \"Ctrl\", \"&#8592;\", \"&#8593;\", \"&#8595;\", \"&#8594;\"],\r\n      [\"~\", \"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"_\", \"=\", \"&#8592;\", \"&#8596;\", \"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"{\", \"}\", \"|\", \"CapsLock\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \":\", \"\\\"\", \"Enter\", \"&#8657;\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"<\", \">\", \"?\", \"&#8657;\", \"Ctrl\", \"Alt\", \" \", \"Alt\", \"Ctrl\", \"&#8592;\", \"&#8593;\", \"&#8595;\", \"&#8594;\"]]\r\n    ]\r\n  ]);//Значения кнопок при разных раскладках\r\n  #countLanguage = 2;//Количество доступных раскладок\r\n\r\n  #screen = undefined;//Объект экрана\r\n  #controlLanguage = undefined;//Объект выбора раскладки на панели\r\n  /**\r\n   * Выполняет инициализацию панели\r\n   * @param {Screen} screen объект экрана\r\n   */\r\n  constructor(screen) {\r\n    if (screen == undefined || !(screen instanceof _screen_screen_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n      return false;\r\n    }\r\n    this.#screen = screen;\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n\r\n    document.addEventListener(\"changeLanguage\", (event) => {\r\n      let indexCurrent = 0;\r\n      for (let item of this.#language) {\r\n        if (item[0] != this.#KEY_CODE && item[0] == event.detail.current) {\r\n          break;\r\n        }\r\n        indexCurrent++;\r\n      }\r\n      indexCurrent++;\r\n      if (indexCurrent > this.#countLanguage) {\r\n        indexCurrent = 1;\r\n      }\r\n      let counter = 0;\r\n      for (let item of this.#language) {\r\n        if (item[0] != this.#KEY_CODE && counter == indexCurrent) {\r\n          this.#controlLanguage.setLanguage(counter - 1);\r\n          this.setLanguage(item[0]);\r\n          break;\r\n        }\r\n        counter++;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Возвращает объект контрольной панели\r\n   * @returns {HTMLElement} объект контрольной панели\r\n   */\r\n  getElement() {\r\n    return this.#boardItem;\r\n  }\r\n  /**\r\n   * Изменяет текущее состояние подсветки клавиш \r\n   */\r\n  lightToggle() {\r\n    this.#keyPanel.classList.toggle(\"on\");\r\n    for (let i = 0; i < this.#keys.length; i++) {\r\n      this.#keys[i].lightToggle();\r\n    }\r\n  }\r\n  /**\r\n   * Устанавливает язык раскладки\r\n   * @param {string} name название раскладки\r\n   */\r\n  setLanguage(name) {\r\n    for (let i = 0; i < this.#keys.length; i++) {\r\n      this.#keys[i].setLanguage(name);\r\n    }\r\n  }\r\n  /**\r\n   * Возвращает символы доступных языковых раскладок\r\n   * @returns {Array} массив символов раскладок\r\n   */\r\n  getLanguage() {\r\n    let result = new Array();\r\n    for (let item of this.#language) {\r\n      if (item[0] != this.#KEY_CODE) {\r\n        result.push(item[0]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * Устанавливает объект контрольной панели раскладки\r\n   * @param {KeyLanguage} controlLanguage объект раскладки\r\n   */\r\n  setControl(controlLanguage) {\r\n    this.#controlLanguage = controlLanguage;\r\n  }\r\n  /**\r\n   * Создает разметку панели\r\n   * Создает DOM объект панели\r\n   */\r\n  #createElement() {\r\n    this.#boardItem = document.createElement(\"div\");\r\n    this.#boardItem.classList.add(\"board_item\");\r\n    let element = \"<div class=\\\"board-item_logo\\\"><a href=\\\"https://rollingscopes.com/\\\" target=\\\"_blank\\\">\";\r\n    element += \"<img src=\\\"https://rollingscopes.com/images/logo_rs_text.svg\\\" alt=\\\"logo\\\"></a></div>\";\r\n    this.#boardItem.insertAdjacentHTML(\"beforeend\", element);\r\n    this.#keyPanel = document.createElement(\"div\");\r\n    this.#keyPanel.classList.add(\"board-item_key\");\r\n    this.#keyPanel.classList.add(\"on\");\r\n    for (let i = 0; i < this.#countKeyInLine.length; i++) {\r\n      this.#keyPanel.insertAdjacentElement(\"beforeend\", this.#createLineKey(i));\r\n    }\r\n    this.#modifyKeys();\r\n    this.#boardItem.insertAdjacentElement(\"beforeend\", this.#keyPanel);\r\n    return true;\r\n  }\r\n  /**\r\n   * Создает разметку линии кнопок клавиатуры\r\n   * Переопределяет необходимые кнопки\r\n   * @param {number} number номер линии\r\n   * @returns {HTMLElement} объект линии кнопок\r\n   */\r\n  #createLineKey(number) {\r\n    let lineKeys = document.createElement(\"div\");\r\n    lineKeys.classList.add(\"item-key_line\");\r\n    for (let i = 0; i < this.#countKeyInLine[number]; i++) {\r\n      let key = new _key_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.#screen);\r\n      this.#keys.push(key);\r\n      lineKeys.insertAdjacentElement(\"beforeend\", key.getElement());\r\n      key.lightToggle();\r\n    }\r\n    return lineKeys;\r\n  }\r\n  /**\r\n   * Модифицирует кнопки под расположение на клавиатуре\r\n   */\r\n  #modifyKeys() {\r\n    this.#keys[13].setType(\"Backspace\");\r\n    this.#keys[14].setType(\"Tab\");\r\n    this.#keys[27].setType(\"medium\");\r\n    this.#keys[28].setType(\"CapsLock\");\r\n    this.#keys[40].setType(\"Enter\");\r\n    this.#keys[41].setType(\"ShiftLeft\");\r\n    this.#keys[52].setType(\"ShiftRight\");\r\n    this.#keys[53].setType(\"ControlLeft\");\r\n    this.#keys[54].setType(\"AltLeft\");\r\n    this.#keys[55].setType(\"space\");\r\n    this.#keys[56].setType(\"AltRight\");\r\n    this.#keys[57].setType(\"ControlRight\");\r\n    this.#keys[59].setType(\"mini\");\r\n    this.#keys[60].setType(\"mini\");\r\n\r\n    let defaultLanguage = undefined;\r\n    for (let key of this.#language.keys()) {\r\n      if (key != this.#KEY_CODE) {\r\n        defaultLanguage = key;\r\n        break;\r\n      }\r\n    }\r\n    for (let i = 0; i < this.#keys.length; i++) {\r\n      for (let item of this.#language) {\r\n        let value = new Array();\r\n        if (item[0] != this.#KEY_CODE) {\r\n          for (let j = 0; j < item[1].length; j++) {\r\n            value.push(item[1][j][i]);\r\n          }\r\n        } else {\r\n          value.push(item[1][i]);\r\n        }\r\n        this.#keys[i].setValue({\r\n          language: item[0],\r\n          value: value\r\n        });\r\n      }\r\n      this.#keys[i].setLanguage(defaultLanguage);\r\n    }\r\n\r\n    this.#union(58, 61);\r\n  }\r\n  /**\r\n   * Выполняет объединение четырех кнопок в один контейнер\r\n   * @param {number} indexFirst индекс первой кнопки\r\n   * @param {number} indexLast индекс последней кнопки\r\n   */\r\n  #union(indexFirst, indexLast) {\r\n    let containerRow = document.createElement(\"div\");\r\n    containerRow.classList.add(\"key_container-row\");\r\n    let containerColumn = document.createElement(\"div\");\r\n    containerColumn.classList.add(\"key_container-column\");\r\n    containerColumn.appendChild(this.#keys[indexFirst + 1].getElement());\r\n    containerColumn.appendChild(this.#keys[indexLast - 1].getElement());\r\n    this.#keys[indexFirst].getElement().insertAdjacentElement(\"beforebegin\", containerRow);\r\n    containerRow.appendChild(this.#keys[indexFirst].getElement());\r\n    containerRow.appendChild(containerColumn);\r\n    containerRow.appendChild(this.#keys[indexLast].getElement());\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/board-item.js?");

/***/ }),

/***/ "./js/src/board/control.js":
/*!*********************************!*\
  !*** ./js/src/board/control.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Control)\n/* harmony export */ });\n/* harmony import */ var _key_control_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./key-control.js */ \"./js/src/board/key-control.js\");\n\r\n\r\nclass Control {\r\n  #control = undefined;//Объект контрольной панели\r\n  #items = undefined;//Массив с объектами панели\r\n  /**\r\n   * Выполняет инициализацию контрольной панели\r\n   */\r\n  constructor() {\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n    this.#items = new Array();\r\n  }\r\n  /**\r\n   * Возвращает объект контрольной панели\r\n   * @returns {HTMLElement} объект контрольной панели\r\n   */\r\n  getElement() {\r\n    return this.#control;\r\n  }\r\n  /**\r\n   * Добавляет элемент в панель\r\n   * @param {object} element элемент\r\n   */\r\n  add(element){\r\n    this.#items.push(element);\r\n    this.#control.children[0].insertAdjacentElement(\"beforeend\", element.getElement());\r\n  }\r\n  /**\r\n   * Создает разметку контрольной панели\r\n   * Создает DOM объект контрольной панели\r\n   */\r\n  #createElement() {\r\n    this.#control = document.createElement(\"div\");\r\n    this.#control.classList.add(\"board_control-panel\");\r\n    this.#control.insertAdjacentHTML(\"beforeend\", \"<div class=\\\"board_control-item\\\"></div>\");\r\n    this.#control.insertAdjacentHTML(\"beforeend\", \"<label class=\\\"logo\\\">ХАЙ-ТАК</label>\");\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/control.js?");

/***/ }),

/***/ "./js/src/board/key-control.js":
/*!*************************************!*\
  !*** ./js/src/board/key-control.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyControl)\n/* harmony export */ });\nclass KeyControl {\r\n  #keyControl = undefined;//Объект кнопки\r\n  #typeKey = new Map([\r\n    [\"power\", {\r\n      src: \"./image/power.png\",\r\n      alt: \"power\"\r\n    }],\r\n    [\"light\", {\r\n      src: \"./image/light.png\",\r\n      alt: \"light\",\r\n      class: \"small\"\r\n    }]\r\n  ]);//Типы кнопок\r\n\r\n  /**\r\n   * Выполняет инициализацию кнопки\r\n   * @param {object} param объект с параметрами инициализации\r\n   * @param {string} param.type тип кнопки\r\n   * @param {boolean} param.start начальная подсветка кнопки\r\n   * @param {function} param.callback функция вызова при нажатии кнопки\r\n   */\r\n  constructor(param) {\r\n    if (!this.#createElement(param)) {\r\n      return false;\r\n    };\r\n    this.#keyControl.addEventListener(\"click\", this.#keyClicked.bind(this, param.callback));\r\n  }\r\n  /**\r\n   * Возвращает объект кнопки\r\n   * @returns {HTMLElement} объект кнопки\r\n   */\r\n  getElement() {\r\n    return this.#keyControl;\r\n  }\r\n  /**\r\n   * Обработчик события клика по кнопке\r\n   * @param {function} функция вызова при нажатии кнопки\r\n   */\r\n  #keyClicked(callback) {\r\n    this.#keyControl.classList.toggle(\"on\");\r\n    if (callback != undefined) {\r\n      callback();\r\n    }\r\n  }\r\n  /**\r\n   * Создает разметку кнопки\r\n   * Создает DOM объект кнопки\r\n   * @param {object} param объект с параметрами инициализации\r\n   * @param {string} param.type тип кнопки\r\n   * @param {boolean} param.start начальная подсветка кнопки\r\n   */\r\n  #createElement(param) {\r\n    this.#keyControl = document.createElement(\"div\");\r\n    this.#keyControl.classList.add(\"control_button\");\r\n    let image = document.createElement(\"img\");\r\n    image.classList.add(\"control_button-img\");\r\n    image.src = this.#typeKey.get(param.type).src;\r\n    image.setAttribute(\"alt\", this.#typeKey.get(param.type).alt);\r\n    this.#keyControl.insertAdjacentElement(\"beforeend\", image);\r\n    if (this.#typeKey.get(param.type).class != undefined) {\r\n      this.#keyControl.classList.add(this.#typeKey.get(param.type).class);\r\n      image.classList.add(this.#typeKey.get(param.type).class);\r\n    }\r\n    if (param.start) {\r\n      this.#keyControl.classList.add(\"on\");\r\n    }\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/key-control.js?");

/***/ }),

/***/ "./js/src/board/key-language.js":
/*!**************************************!*\
  !*** ./js/src/board/key-language.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyLanguage)\n/* harmony export */ });\nclass KeyLanguage {\r\n  #keyLanguage = undefined;//Объект кнопки\r\n  #keys = new Array();//Массив кнопок раскладок\r\n  #language = new Array();//Массив значений раскладок\r\n  /**\r\n   * Выполняет инициализацию кнопки\r\n   * @param {object} param объект с параметрами инициализации\r\n   * @param {Array} param.name названия раскладок кнопки\r\n   * @param {number} param.start индекс стартовой кнопки с подсветкой\r\n   * @param {function} param.callback функция вызова при нажатии кнопки\r\n   */\r\n  constructor(param) {\r\n    if (!this.#createElement(param)) {\r\n      return false;\r\n    };\r\n    for (let i = 0; i < this.#keys.length; i++) {\r\n      this.#keys[i].addEventListener(\"click\", this.#keyClicked.bind(this, { index: i, callback: param.callback}));\r\n    }\r\n  }\r\n  /**\r\n   * Возвращает объект кнопки\r\n   * @returns {HTMLElement} объект кнопки\r\n   */\r\n  getElement() {\r\n    return this.#keyLanguage;\r\n  }\r\n  /**\r\n   * Устанавливает раскладку\r\n   * @param {number} index индекс раскладки\r\n   */\r\n  setLanguage(index){\r\n    this.#keyClicked({\r\n      index: index\r\n    });\r\n  }\r\n  /**\r\n   * Обработчик события клика по кнопке\r\n   * @param {object} param объект с параметрами\r\n   * @param {number} param.index индекс выбранной раскладки\r\n   * @param {function} param.callback функция вызова при нажатии кнопки\r\n   */\r\n  #keyClicked(param) {\r\n    for (let i = 0; i < this.#keys.length; i++){\r\n      this.#keys[i].classList.remove(\"on\");\r\n    }\r\n    this.#keys[param.index].classList.add(\"on\");\r\n    if (param.callback != undefined) {\r\n      param.callback(this.#language[param.index]);\r\n    }\r\n  }\r\n  /**\r\n   * Создает разметку кнопки\r\n   * Создает DOM объект кнопки\r\n   * @param {object} param объект с параметрами инициализации\r\n   * @param {Array} param.name названия раскладок кнопки\r\n   * @param {number} param.start индекс стартовой кнопки с подсветкой\r\n   */\r\n  #createElement(param) {\r\n    this.#keyLanguage = document.createElement(\"div\");\r\n    this.#keyLanguage.classList.add(\"control_button\");\r\n    this.#keyLanguage.classList.add(\"group\");\r\n    for (let i = 0; i < param.name.length; i++){\r\n      let item = document.createElement(\"label\");\r\n      item.innerText = param.name[i];\r\n      this.#keyLanguage.insertAdjacentElement(\"beforeend\", item);\r\n      if (i == param.start) {\r\n        item.classList.add(\"on\");\r\n      }\r\n      this.#keys.push(item);\r\n    }\r\n    this.#language = param.name;\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/key-language.js?");

/***/ }),

/***/ "./js/src/board/key.js":
/*!*****************************!*\
  !*** ./js/src/board/key.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Key)\n/* harmony export */ });\n/* harmony import */ var _screen_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../screen/screen */ \"./js/src/screen/screen.js\");\n\r\n\r\nclass Key {\r\n  #TYPE_DEFAULT = \"small\";//Дефолтный тип кнопки\r\n  #KEY_CODE = \"CODE\";//Ключ кодов клавиш в объекте языков\r\n\r\n  #key = undefined;//Объект кнопка\r\n  #screen = undefined;//Объект экрана\r\n\r\n  #keyType = new Map([\r\n    [\"mini\", {\r\n      img: \"./image/btn-mini.png\",\r\n      class: \"mini\"\r\n    }],\r\n    [\"small\", {\r\n      img: \"./image/btn-sm.png\",\r\n      class: \"small\"\r\n    }],\r\n    [\"medium\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\"\r\n    }],\r\n    [\"space\", {\r\n      img: \"./image/btn-lg.png\",\r\n      class: \"space\"\r\n    }],\r\n    [\"Tab\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\",\r\n      control: true\r\n    }],\r\n    [\"CapsLock\", {\r\n      img: \"./image/btn-ctrl.png\",\r\n      class: \"caps\",\r\n      indicator: true,\r\n      control: true\r\n    }],\r\n    [\"Backspace\", {\r\n      img: \"./image/btn-ctrl.png\",\r\n      class: \"caps\",\r\n      control: true\r\n    }],\r\n    [\"Enter\", {\r\n      img: \"./image/btn-md.png\",\r\n      class: \"enter\",\r\n      control: true\r\n    }],\r\n    [\"ShiftLeft\", {\r\n      img: \"./image/btn-md.png\",\r\n      class: \"shift\",\r\n      control: true\r\n    }],\r\n    [\"ShiftRight\", {\r\n      img: \"./image/btn-md.png\",\r\n      class: \"shift-right\",\r\n      control: true\r\n    }],\r\n    [\"ControlLeft\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\",\r\n      control: true\r\n    }],\r\n    [\"ControlRight\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\",\r\n      control: true\r\n    }],\r\n    [\"AltLeft\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\",\r\n      control: true\r\n    }],\r\n    [\"AltRight\", {\r\n      img: \"./image/btn-ctrl-sm.png\",\r\n      class: \"tab\",\r\n      control: true\r\n    }]\r\n  ]);//Типы кнопок\r\n  #type = undefined;//Текущий тип кнопки\r\n  #language = new Map();//Значения кнопок при разных раскладках\r\n  #languageCurrent = undefined;//Значение текущей раскладки\r\n  #indicatorCurrent = false;//Состояние подсветки индикатора\r\n  #shiftCurrent = 0;//Текущий индекс выбора символа из массива\r\n  #altCurrent = 0;//Текущий индекс выбора Alt\r\n  /**\r\n   * Выполняет инициализацию кнопка\r\n   * @param {Screen} screen объект экрана\r\n   */\r\n  constructor(screen) {\r\n    if (screen == undefined || !(screen instanceof _screen_screen__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\r\n      return false;\r\n    }\r\n    this.#screen = screen;\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n    document.addEventListener(\"keydown\", this.#keyPressed.bind(this));\r\n    document.addEventListener(\"keyup\", this.#keyUnpressed.bind(this));\r\n\r\n    this.#key.addEventListener(\"mousedown\", this.#keyClicked.bind(this));\r\n    this.#key.addEventListener(\"mouseup\", this.#keyUnclicked.bind(this));\r\n\r\n    document.addEventListener(\"setRegistry\", (event) => {\r\n      this.#shiftCurrent = event.detail.index;\r\n      this.setLanguage(this.#languageCurrent);\r\n      // console.log(event.detail.index);\r\n    });\r\n  }\r\n  /**\r\n   * Возвращает объект кнопка\r\n   * @returns {HTMLElement} объект кнопка\r\n   */\r\n  getElement() {\r\n    return this.#key;\r\n  }\r\n  /**\r\n   * Изменяет тип кнопка\r\n   * @param {string} type тип кнопки\r\n   */\r\n  setType(type) {\r\n    if (this.#keyType.get(type) != undefined) {\r\n      this.#type = type;\r\n      this.#key.classList.add(this.#keyType.get(type).class);\r\n      this.#key.children[0].src = this.#keyType.get(type).img;\r\n      if (this.#keyType.get(type).indicator) {\r\n        this.#key.insertAdjacentHTML(\"beforeend\", \"<div class=\\\"key-light\\\"></div>\");\r\n        this.#indicatorCurrent = false;\r\n      } else {\r\n        if (this.#key.children[2] != undefined) {\r\n          this.#key.children[2].remove();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Устанавливает значение текущей раскладки\r\n   * @param {string} language название раскладки\r\n   */\r\n  setLanguage(value) {\r\n    if (this.#language.get(value) == undefined) {\r\n      return false;\r\n    }\r\n    this.#languageCurrent = value;\r\n    this.#key.children[1].innerHTML = this.#language.get(value)[this.#shiftCurrent];\r\n    this.#setExclusionKeyName(this.#key.children[1]);\r\n  }\r\n  /**\r\n   * Устанавливает значения кнопки для раскладки\r\n   * @param {object} param объект с параметрами\r\n   * @param {string} param.language название раскладки\r\n   * @param {Array} param.value значения раскладки\r\n   */\r\n  setValue(param) {\r\n    this.#language.set(param.language, param.value);\r\n  }\r\n  /**\r\n   * Изменяет текущее состояние подсветки кнопка \r\n   */\r\n  lightToggle() {\r\n    this.#key.classList.toggle(\"on\");\r\n  }\r\n  /**\r\n   * Создает разметку кнопка\r\n   * Создает DOM объект кнопка\r\n   */\r\n  #createElement() {\r\n    this.#key = document.createElement(\"div\");\r\n    this.#key.classList.add(\"key\");\r\n    this.#key.insertAdjacentHTML(\"beforeend\", \"<img src=\\\"\" + this.#keyType.get(this.#TYPE_DEFAULT).img + \"\\\" alt=\\\"key\\\">\");\r\n    this.#key.insertAdjacentHTML(\"beforeend\", \"<label></label>\");\r\n    if (this.#keyType.get(this.#TYPE_DEFAULT).indicator) {\r\n      this.#key.insertAdjacentHTML(\"beforeend\", \"<div class=\\\"key-light\\\"></div>\");\r\n      this.#indicatorCurrent = false;\r\n    }\r\n    this.#type = this.#TYPE_DEFAULT;\r\n    return true;\r\n  }\r\n  /**\r\n   * Обработчик нажатия кнопки на клавиатуре\r\n   * @param {Event} event событие нажатия\r\n   */\r\n  #keyPressed(event) {\r\n    if (event.keyCode == this.#language.get(this.#KEY_CODE)[0]) {\r\n      if (event.code != this.#type && this.#keyType.get(event.code) != undefined) {\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n\r\n      if (this.#keyType.get(event.code) == undefined) {\r\n        this.#screen.add(this.#language.get(this.#languageCurrent)[this.#shiftCurrent]);\r\n      } else {\r\n        switch (event.code) {\r\n          case \"ShiftLeft\":\r\n          case \"ShiftRight\": {\r\n            if (this.#shiftCurrent != 1) {\r\n              this.#shiftCurrent = 1;\r\n              document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 1 } }));\r\n            }\r\n            break;\r\n          }\r\n          case \"CapsLock\": {\r\n            if (this.#indicatorCurrent) {\r\n              this.#indicatorCurrent = false;\r\n              this.#key.children[2].classList.remove(\"on\");\r\n              document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 0 } }));\r\n            } else {\r\n              this.#indicatorCurrent = true;\r\n              this.#key.children[2].classList.add(\"on\");\r\n              document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 1 } }));\r\n            }\r\n            break;\r\n          }\r\n          case \"AltLeft\":\r\n          case \"AltRight\": {\r\n            this.#altCurrent = 1;\r\n            break;\r\n          }\r\n          default: { }\r\n        }\r\n      }\r\n      this.#key.classList.add(\"pressed\");\r\n\r\n      if (this.#altCurrent + this.#shiftCurrent > 1) {\r\n        document.dispatchEvent(new CustomEvent(\"changeLanguage\", { detail: { current: this.#languageCurrent } }));\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Обработчик отпускания кнопки на клавиатуре\r\n   * @param {Event} event событие нажатия\r\n   */\r\n  #keyUnpressed(event) {\r\n    if (event.keyCode == this.#language.get(this.#KEY_CODE)[0]) {\r\n      event.preventDefault();\r\n      if (this.#keyType.get(event.code) != undefined) {\r\n        switch (event.code) {\r\n          case \"ShiftLeft\":\r\n          case \"ShiftRight\": {\r\n            if (this.#shiftCurrent == 1) {\r\n              this.#shiftCurrent = 0;\r\n              document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 0 } }));\r\n            }\r\n            break;\r\n          }\r\n          case \"AltLeft\":\r\n          case \"AltRight\": {\r\n            this.#altCurrent = 0;\r\n            break;\r\n          }\r\n          default: { }\r\n        }\r\n      }\r\n      this.#key.classList.remove(\"pressed\");\r\n    }\r\n  }\r\n  /**\r\n   * Обработчик клика мыши на кнопке\r\n   * @param {Event} event событие клика\r\n   */\r\n  #keyClicked(event) {\r\n    event.preventDefault();\r\n    if (this.#keyType.get(this.#type).control == undefined) {\r\n      this.#screen.add(this.#language.get(this.#languageCurrent)[this.#shiftCurrent]);\r\n    } else {\r\n      switch (this.#type) {\r\n        case \"ShiftLeft\":\r\n        case \"ShiftRight\": {\r\n          if (this.#shiftCurrent != 1) {\r\n            this.#shiftCurrent = 1;\r\n            document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 1 } }));\r\n          }\r\n          break;\r\n        }\r\n        case \"CapsLock\": {\r\n          if (this.#indicatorCurrent) {\r\n            this.#indicatorCurrent = false;\r\n            this.#key.children[2].classList.remove(\"on\");\r\n            document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 0 } }));\r\n          } else {\r\n            this.#indicatorCurrent = true;\r\n            this.#key.children[2].classList.add(\"on\");\r\n            document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 1 } }));\r\n          }\r\n          break;\r\n        }\r\n        default: { }\r\n      }\r\n    }\r\n    this.#key.classList.add(\"pressed\");\r\n  }\r\n  /**\r\n   * Обработчик клика мыши на кнопке\r\n   * @param {Event} event событие клика\r\n   */\r\n  #keyUnclicked(event) {\r\n    event.preventDefault();\r\n    if (this.#keyType.get(this.#type) != undefined) {\r\n      switch (this.#type) {\r\n        case \"ShiftLeft\":\r\n        case \"ShiftRight\": {\r\n          if (this.#shiftCurrent == 1) {\r\n            this.#shiftCurrent = 0;\r\n            document.dispatchEvent(new CustomEvent(\"setRegistry\", { detail: { index: 0 } }));\r\n          }\r\n          break;\r\n        }\r\n        default: { }\r\n      }\r\n    }\r\n    this.#key.classList.remove(\"pressed\");\r\n    // event.preventDefault();\r\n    // this.#key.classList.remove(\"pressed\");\r\n  }\r\n  /**\r\n   * Обрабатывает исключения различий видимого текста с предуставноленным\r\n   * @param {HTMLElement} element элемент\r\n   */\r\n  #setExclusionKeyName(element) {\r\n    if (element.innerHTML == \"CapsLock\") {\r\n      element.innerHTML = element.innerHTML.slice(0, 4);\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/key.js?");

/***/ }),

/***/ "./js/src/board/keyboard.js":
/*!**********************************!*\
  !*** ./js/src/board/keyboard.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyBoard)\n/* harmony export */ });\n/* harmony import */ var _control_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./control.js */ \"./js/src/board/control.js\");\n/* harmony import */ var _board_item_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./board-item.js */ \"./js/src/board/board-item.js\");\n/* harmony import */ var _key_control_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./key-control.js */ \"./js/src/board/key-control.js\");\n/* harmony import */ var _key_language_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./key-language.js */ \"./js/src/board/key-language.js\");\n/* harmony import */ var _screen_screen_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../screen/screen.js */ \"./js/src/screen/screen.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass KeyBoard {\r\n  #keyboard = undefined;//Объект клавиатуры\r\n  #control = undefined;//Объект контрольной панели\r\n  #board = undefined;//Объект панели кнопок\r\n  #screen = undefined;//Объект экрана\r\n  /**\r\n   * Выполняет инициализацию клавиатуры\r\n   * @param {Screen} screen объект экрана\r\n   */\r\n  constructor(screen) {\r\n    if (screen == undefined || !(screen instanceof _screen_screen_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])) {\r\n      return false;\r\n    }\r\n    this.#screen = screen;\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n  }\r\n  /**\r\n   * Возвращает объект клавиатуры\r\n   * @returns {HTMLElement} объект клавиатуры\r\n   */\r\n  getElement() {\r\n    return this.#keyboard;\r\n  }\r\n  /**\r\n   * Создает разметку клавиатуры\r\n   * Создает DOM объект клавиатуры\r\n   */\r\n  #createElement() {\r\n    this.#keyboard = document.createElement(\"div\");\r\n    this.#keyboard.classList.add(\"board_container\");\r\n    this.#board = new _board_item_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.#screen);\r\n    this.#control = new _control_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.#control.add(new _key_control_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\r\n      type: \"power\",\r\n      start: true,\r\n    }));\r\n    this.#control.add(new _key_control_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\r\n      type: \"light\",\r\n      start: true,\r\n      callback: this.#board.lightToggle.bind(this.#board)\r\n    }));\r\n    let languageKey = new _key_language_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\r\n      name: this.#board.getLanguage(),\r\n      start: 0,\r\n      callback: this.#board.setLanguage.bind(this.#board)\r\n    });\r\n    this.#board.setControl(languageKey);\r\n    this.#control.add(languageKey);\r\n\r\n    this.#keyboard.insertAdjacentElement(\"beforeend\", this.#control.getElement());\r\n    this.#keyboard.insertAdjacentElement(\"beforeend\", this.#board.getElement());\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/board/keyboard.js?");

/***/ }),

/***/ "./js/src/index.js":
/*!*************************!*\
  !*** ./js/src/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _notebook_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./notebook.js */ \"./js/src/notebook.js\");\n\r\n\r\nlet notebook;//Объект ноутбука\r\n\r\nwindow.onload = function () {\r\n  notebook = new _notebook_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n};\n\n//# sourceURL=webpack://keyboard/./js/src/index.js?");

/***/ }),

/***/ "./js/src/notebook.js":
/*!****************************!*\
  !*** ./js/src/notebook.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Notebook)\n/* harmony export */ });\n/* harmony import */ var _screen_screen_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./screen/screen.js */ \"./js/src/screen/screen.js\");\n/* harmony import */ var _board_keyboard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./board/keyboard.js */ \"./js/src/board/keyboard.js\");\n\r\n\r\n\r\nclass Notebook {\r\n  #notebook = undefined;\r\n  #screen = undefined;\r\n  #keyboard = undefined;\r\n\r\n  /**\r\n   * Выполняет инициализацию ноутбука\r\n   */\r\n  constructor() {\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n    this.#screen = new _screen_screen_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.#notebook.insertAdjacentElement(\"beforeend\", this.#screen.getElement());\r\n\r\n    this.#keyboard = new _board_keyboard_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.#screen);\r\n    this.#notebook.insertAdjacentElement(\"beforeend\", this.#keyboard.getElement());\r\n  }\r\n  /**\r\n   * Возвращает объект ноутбука\r\n   * @returns {HTMLElement} объект ноутбука\r\n   */\r\n  getElement() {\r\n    return this.#notebook;\r\n  }\r\n  /**\r\n   * Создает разметку ноутбука\r\n   * Создает DOM объект ноутбука\r\n   */\r\n  #createElement() {\r\n    this.#notebook = document.createElement(\"div\");\r\n    this.#notebook.classList.add(\"keyboard\");\r\n    let body = document.getElementsByTagName(\"body\")[0];\r\n    if (body == undefined) {\r\n      return false;\r\n    }\r\n    body.insertAdjacentElement(\"afterbegin\", this.#notebook);\r\n\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/notebook.js?");

/***/ }),

/***/ "./js/src/screen/camera.js":
/*!*********************************!*\
  !*** ./js/src/screen/camera.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Camera)\n/* harmony export */ });\nclass Camera {\r\n  #WORK_TIME_INDICATOR = 5000;//Время работы индикатора камеры\r\n\r\n  #camera = undefined;//Объект камера\r\n  #cameraPower = undefined;//Объект индикации камеры\r\n  /**\r\n   * Выполняет инициализацию камера\r\n   */\r\n  constructor() {\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n  }\r\n  /**\r\n   * Возвращает объект камера\r\n   * @returns {HTMLElement} объект камера\r\n   */\r\n  getElement() {\r\n    return this.#camera;\r\n  }\r\n  /**\r\n   * Включает индикацию камеры\r\n   */\r\n  on() {\r\n    this.#cameraPower.classList.add(\"on\");\r\n    setTimeout(() => {\r\n      this.#cameraPower.classList.remove(\"on\");\r\n    }, this.#WORK_TIME_INDICATOR);\r\n  }\r\n  /**\r\n   * Создает разметку камера\r\n   * Создает DOM объект камера\r\n   */\r\n  #createElement() {\r\n    this.#camera = document.createElement(\"div\");\r\n    this.#camera.classList.add(\"camera_control-item\");\r\n    this.#camera.insertAdjacentHTML(\"beforeend\", \"<img class=\\\"camera\\\" src=\\\"./image/camera.png\\\" alt=\\\"camera\\\">\");\r\n    this.#cameraPower = document.createElement(\"div\");\r\n    this.#cameraPower.classList.add(\"camera-power\");\r\n    this.#camera.insertAdjacentElement(\"beforeend\", this.#cameraPower);\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/screen/camera.js?");

/***/ }),

/***/ "./js/src/screen/screen.js":
/*!*********************************!*\
  !*** ./js/src/screen/screen.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Screen)\n/* harmony export */ });\n/* harmony import */ var _camera_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera.js */ \"./js/src/screen/camera.js\");\n\r\n\r\nclass Screen {\r\n  #screen = undefined;//Объект экран\r\n  #camera = undefined;//Объект камера\r\n  #textArea = undefined;//Объект поля ввода\r\n\r\n  /**\r\n   * Выполняет инициализацию экрана\r\n   */\r\n  constructor() {\r\n    if (!this.#createElement()) {\r\n      return false;\r\n    };\r\n    this.#textArea.addEventListener(\"click\", this.#textAreaClicked.bind(this));\r\n  }\r\n  /**\r\n   * Возвращает объект экрана\r\n   * @returns {HTMLElement} объект экрана\r\n   */\r\n  getElement() {\r\n    return this.#screen;\r\n  }\r\n  /**\r\n   * Добавляет символ в текущей позиции курсора\r\n   * @param {string} symbol\r\n   */\r\n  add(symbol) {\r\n    if (document.activeElement != this.#textArea) {\r\n      this.#textArea.value += symbol;\r\n      this.#camera.on();\r\n    }\r\n  }\r\n  /**\r\n   * Обработчик события клика по текстовому полю\r\n   */\r\n  #textAreaClicked() {\r\n    this.#camera.on();\r\n  }\r\n  /**\r\n   * Создает разметку экрана\r\n   * Создает DOM объект экрана\r\n   */\r\n  #createElement() {\r\n    this.#screen = document.createElement(\"div\");\r\n    this.#screen.classList.add(\"screen_container\");\r\n    this.#camera = new _camera_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.#screen.insertAdjacentElement(\"beforeend\", this.#camera.getElement());\r\n    this.#screen.insertAdjacentHTML(\"beforeend\", \"<div class=\\\"screen\\\"></div>\");\r\n    this.#textArea = document.createElement(\"textarea\");\r\n    this.#textArea.classList.add(\"screen_item\");\r\n    this.#screen.children[1].insertAdjacentElement(\"beforeend\", this.#textArea);\r\n    return true;\r\n  }\r\n}\n\n//# sourceURL=webpack://keyboard/./js/src/screen/screen.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/src/index.js");
/******/ 	
/******/ })()
;